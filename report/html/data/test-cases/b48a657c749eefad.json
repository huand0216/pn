{
  "uid" : "b48a657c749eefad",
  "name" : "test_inquiry[data4]",
  "fullName" : "tests.test_1_inquiry.Test_inquiry#test_inquiry",
  "historyId" : "4895fde82a53a48dfd569f610ca1800b",
  "time" : {
    "start" : 1624365288916,
    "stop" : 1624365289104,
    "duration" : 188
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'true' in '{\"errCode\":80010,\"msg\":\"未选择询价机构或系统推荐失败\"}'",
  "statusTrace" : "self = <tests.test_1_inquiry.Test_inquiry object at 0x7faec12ee490>\ndata = {'caseID': 'case007', '描述': '发布询价', '请求参数': 'case007', '请求地址': 'https://www.daishupei.com/api/parts/web/inquiry/publishInquiry', ...}\nrepair_shopToken = 'Bearer d3f10ae07ea9a5183157f38a2e653486245ff18c'\n\n    @pytest.mark.parametrize(\n        \"data\",excelData\n    )\n    def test_inquiry(self,data,repair_shopToken):\n        caseId = data[OperationExcel.caseId]\n        url = data[OperationExcel.caseUrl]\n        method = data[OperationExcel.caseMethod]\n        jsonData = ExcelMappingYaml(filename=\"data.yaml\").get_mappingYaml(key=data[OperationExcel.caseParameter])\n        headers = {\"Authorization\": repair_shopToken}\n        expect = data[OperationExcel.caseExpect]\n    \n        if caseId == \"case008\":\n            res = My_request().my_request(url=url,method=method,json=jsonData,headers=headers\n                                        )\n            inquiryId = res.json()[\"data\"][\"records\"][0][\"id\"]\n            # 将最新的询价单id和报价单id写入yaml文件\n            modify_public = OperationYaml(filename=\"public.yaml\").readYamlDict()\n            modify_public[\"inquiryId\"] = str(inquiryId)\n    \n            sql = \"select *from quote_main where inquiry_id = {0};\".format(inquiryId)\n            selectResult = get_connSql(sql)\n            newQuoteMainId = str(selectResult[0][\"id\"])\n            modify_public[\"quoteMainId\"] = str(newQuoteMainId)\n            write_public = OperationYaml(\"data\",\"public.yaml\").updateYaml(modifyItem=dict(modify_public))\n    \n            # 更新data.yaml内'case014'的参数case010,case011参数\n            modify_data = OperationYaml(dirname=\"data\",filename=\"data.yaml\").readYamlDict()\n            modify_data[\"case014\"][\"inquiryId\"] = inquiryId\n            modify_data[\"case010\"][\"quoteMasterId\"] = newQuoteMainId\n            modify_data[\"case011\"][\"quoteMainId\"] = newQuoteMainId\n            write_data = OperationYaml(\"data\",\"data.yaml\").updateYaml(modifyItem=dict(modify_data))\n    \n        elif data[OperationExcel.caseMethod] == \"GET\":\n            res = My_request().GET(url=url,headers=headers,params=jsonData)\n            repair_shopOrgId = res.json()[\"data\"][\"orgId\"]\n            repair_shopUserId = res.json()[\"data\"][\"id\"]\n    \n            # 更新public内的参数\n            modify_public = OperationYaml(dirname=\"data\",filename=\"public.yaml\").readYamlDict()\n            modify_public[\"repair_shopOrgId\"] = repair_shopOrgId\n            modify_public[\"repair_shopUserId\"] = repair_shopUserId\n            write_public = OperationYaml(filename=\"public.yaml\").updateYaml(modifyItem=modify_public)\n    \n        elif data[OperationExcel.caseMethod] == \"POST\":\n            res = My_request().POST(url=url,json = jsonData,headers = headers )\n            if caseId == \"case005\":\n                # 将询价供应商list更新到case007的参数\n                orgIdList = list(map(lambda i:i[\"orgId\"],res.json()[\"data\"]))   # 获取到最新的orgIdList\n                modify_data = OperationYaml(\"data.yaml\").readYamlDict()\n                modify_data[\"case007\"][\"orgIdList\"] = orgIdList\n                OperationYaml(\"data.yaml\").updateYaml(modifyItem=modify_data)   # 更新\n    \n        result = res.text\n        assert res.status_code == 200\n>       assert expect in result\nE       assert 'true' in '{\"errCode\":80010,\"msg\":\"未选择询价机构或系统推荐失败\"}'\n\ntests/test_1_inquiry.py:71: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_verify_url",
    "time" : {
      "start" : 1624365286534,
      "stop" : 1624365286534,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1624365286826,
      "stop" : 1624365286827,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1624365286534,
      "stop" : 1624365286534,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "repair_shopToken",
    "time" : {
      "start" : 1624365286534,
      "stop" : 1624365286826,
      "duration" : 292
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1624365288915,
      "stop" : 1624365288916,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_1_inquiry"
  }, {
    "name" : "subSuite",
    "value" : "Test_inquiry"
  }, {
    "name" : "host",
    "value" : "MacBook-Pro-huand.local"
  }, {
    "name" : "thread",
    "value" : "32613-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_1_inquiry"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'caseID': 'case007', '描述': '发布询价', '请求方法': 'POST', '请求地址': 'https://www.daishupei.com/api/parts/web/inquiry/publishInquiry', '请求参数': 'case007', '预期结果': 'true'}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "b48a657c749eefad.json",
  "parameterValues" : [ "{'caseID': 'case007', '描述': '发布询价', '请求方法': 'POST', '请求地址': 'https://www.daishupei.com/api/parts/web/inquiry/publishInquiry', '请求参数': 'case007', '预期结果': 'true'}" ]
}