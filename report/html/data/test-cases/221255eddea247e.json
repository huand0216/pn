{
  "uid" : "221255eddea247e",
  "name" : "test_others[data3]",
  "fullName" : "tests.test_5_others.Test_others#test_others",
  "historyId" : "47bdbe834fc79e16cc006c0865d25162",
  "time" : {
    "start" : 1624366896610,
    "stop" : 1624366897244,
    "duration" : 634
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '\"errCode\":0' in '{\"errCode\":100002,\"msg\":\"您的账户信息已失效，请重新登录！\"}'",
  "statusTrace" : "self = <tests.test_5_others.Test_others object at 0x7fccd8c231f0>\ndata = {'caseID': 'case036', '描述': '匹配供应商（三种匹配类型）', '操作方（修理厂/供应商）': 'repair_shopToken', '请求参数': 'case036', ...}\nrepair_shopToken = 'Bearer ac54256ea17fff101a46643c5ab23fdd97fc0886'\nsupplierToken = 'Bearer fb90e52eeaa30c4cd3f60782bac819ff6b7f2767'\n\n    @pytest.mark.parametrize(\n        \"data\",excelData\n    )\n    def test_others(self,data,repair_shopToken,supplierToken):\n        # 获取到请求需要的参数\n        caseId = data[OperationExcel.caseId]\n        url = data[OperationExcel.caseUrl]\n        method = data[OperationExcel.caseMethod]\n        remark = data[OperationExcel.caseRemarks]\n        operator = data[OperationExcel.caseOperator]\n        parameter = data[OperationExcel.caseParameter]  # 参数\n        expect = data[OperationExcel.caseExpect]\n    \n        if operator == \"repair_shopToken\":\n            headers = {\"Authorization\": repair_shopToken}\n        elif operator == \"supplierToken\":\n            headers = {\"Authorization\": supplierToken}\n        jsonData = ExcelMappingYaml(filename=\"data.yaml\").get_mappingYaml(parameter)\n        if caseId == \"case036\":\n            for i in range(3):\n                jsonData[\"matchType\"] = i+1\n                res = My_request().POST(url=url, headers=headers, json=jsonData)\n                result = res.text\n        elif caseId == \"case035\":\n            res = My_request().POST(url=url, headers=headers, params=jsonData)\n            result = res.text\n        elif caseId == \"case038\":\n            random_int = random.randint(00000000000,99999999999)\n            # 更新掉新增员工的手机号\n            jsonData[\"phone\"] = str(random_int)\n            res = My_request().POST(url=url, headers=headers, json=jsonData)\n            result = res.text\n            # 更新case039、case040的参数\n            del_id = res.json()[\"data\"]\n            modify_data = OperationYaml(filename=\"data.yaml\").readYamlDict()\n            modify_data[\"case039\"][\"id\"] = del_id     # 更新成要删除的id\n            modify_data[\"case040\"][\"oem\"] = str(random_int)\n            OperationYaml(filename=\"data.yaml\").updateYaml(modifyItem=modify_data)   # 更新\n    \n        elif method == \"GET\":\n            res = My_request().GET(url=url, headers=headers, params=jsonData)\n            result = res.text\n        elif method == \"POST\":\n            res = My_request().POST(url=url, headers=headers, json=jsonData)\n            result = res.text\n            # 更新case035的参数\n            if caseId == \"case034\":\n                delDeliveryId = res.json()[\"data\"][\"orgDeliveryDTOS\"][1][\"id\"]\n                modify_data = OperationYaml(filename=\"data.yaml\").readYamlDict()\n                modify_data[\"case035\"][\"id\"] = delDeliveryId\n                OperationYaml(filename=\"data.yaml\").updateYaml(modifyItem=modify_data)  # 更新\n        # 对所有用例进行断言\n>       assert expect in result\nE       assert '\"errCode\":0' in '{\"errCode\":100002,\"msg\":\"您的账户信息已失效，请重新登录！\"}'\n\ntests/test_5_others.py:68: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1624366882293,
      "stop" : 1624366882293,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1624366896610,
      "stop" : 1624366896610,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1624366881711,
      "stop" : 1624366881711,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "supplierToken",
    "time" : {
      "start" : 1624366889387,
      "stop" : 1624366890005,
      "duration" : 618
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "repair_shopToken",
    "time" : {
      "start" : 1624366881711,
      "stop" : 1624366882293,
      "duration" : 582
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1624366881711,
      "stop" : 1624366881711,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_5_others"
  }, {
    "name" : "subSuite",
    "value" : "Test_others"
  }, {
    "name" : "host",
    "value" : "MacBook-Pro-huand.local"
  }, {
    "name" : "thread",
    "value" : "33271-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_5_others"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'caseID': 'case036', '描述': '匹配供应商（三种匹配类型）', '操作方（修理厂/供应商）': 'repair_shopToken', '请求方法': 'POST', '请求地址': 'https://www.daishupei.com/api/user/web/org/getRecommendSupplierList', '请求参数': 'case036', '预期结果': '\"errCode\":0'}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "221255eddea247e.json",
  "parameterValues" : [ "{'caseID': 'case036', '描述': '匹配供应商（三种匹配类型）', '操作方（修理厂/供应商）': 'repair_shopToken', '请求方法': 'POST', '请求地址': 'https://www.daishupei.com/api/user/web/org/getRecommendSupplierList', '请求参数': 'case036', '预期结果': '\"errCode\":0'}" ]
}